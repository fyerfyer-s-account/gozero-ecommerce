syntax = "v1"

import "apis/user.api"
import "apis/product.api"
import "apis/cart.api"
import "apis/order.api"
import "apis/payment.api"

type Response {
	Message string `json:"message"`
}

service mall-api {
	@handler HealthCheck
	get /health returns (Response)
}

@server (
	group: user
)
service mall-api {
	@handler Register
	post /api/user/register (RegisterReq) returns (RegisterResp)

	@handler Login
	post /api/user/login (LoginReq) returns (TokenResp)
}

@server (
	jwt:        Auth
	group:      user
	middleware: Auth
)
service mall-api {
	@handler Logout
	post /api/user/logout (LogoutReq) returns (LogoutResp)

	@handler GetProfile
	get /api/user/profile returns (UserInfo)

	@handler UpdateProfile
	put /api/user/profile (UpdateProfileReq)

	@handler AddAddress
	post /api/user/addresses (AddressReq) returns (Address)

	@handler ChangePassword
	put /api/user/password/change (ChangePasswordReq)

	@handler ResetPassword
	post /api/user/password/reset (ResetPasswordReq)

	@handler UpdateAddress
	put /api/user/addresses/:id (AddressReq)

	@handler DeleteAddress
	delete /api/user/addresses/:id (DeleteAddressReq)

	@handler ListAddresses
	get /api/user/addresses returns ([]Address)

	@handler GetWallet
	get /api/user/wallet returns (WalletDetail)

	// @handler GetWalletLogs
	// get /api/user/wallet/logs (WalletLogReq) returns ([]WalletLog)
	@handler GetWalletTransactions
	get /api/user/wallet/transactions (TransactionListReq) returns (TransactionListResp)

	@handler RechargeWallet
	post /api/user/wallet/recharge (RechargeReq)
}

@server (
	group: product
)
service mall-api {
	@handler SearchProducts
	get /api/products/search (SearchReq) returns (SearchResp)

	@handler GetProduct
	get /api/products/:id (GetProductReq) returns (Product)

	@handler GetProductSkus
	get /api/products/:id/skus (GetProductSkusReq) returns ([]Sku)

	@handler GetCategories
	get /api/categories returns (GetCategoriesResp)

	@handler GetProductReviews
	get /api/products/:id/reviews (ReviewListReq) returns ([]Review)
}

@server (
	jwt:        Auth
	group:      product
	middleware: AdminAuth // administrator authentication
)
service mall-api {
	@handler CreateProduct
	post /api/admin/products (CreateProductReq) returns (CreateProductResp)

	@handler UpdateProduct
	put /api/admin/products/:id (UpdateProductReq)

	@handler DeleteProduct
	delete /api/admin/products/:id (DeleteProductReq)

	@handler CreateCategory
	post /api/admin/categories (CreateCategoryReq) returns (CreateCategoryResp)

	@handler UpdateCategory
	put /api/admin/categories/:id (UpdateCategoryReq)

	@handler DeleteCategory
	delete /api/admin/categories/:id (DeleteCategoryReq)

	@handler CreateSku
	post /api/admin/products/:productId/skus (CreateSkuReq) returns (CreateSkuResp)

	@handler UpdateSku
	put /api/admin/products/skus/:id (UpdateSkuReq)

	@handler DeleteReview
	delete /api/admin/reviews/:id (DeleteReviewReq)

	@handler UpdateReview
	put /api/products/reviews/:id (UpdateReviewReq)
}

@server (
	jwt:        Auth
	group:      cart
	middleware: Auth
)
service mall-api {
	@handler AddCartItem
	post /api/cart/items (CartItemReq)

	@handler UpdateCartItem
	put /api/cart/items/:id (CartItemReq)

	@handler DeleteCartItem
	delete /api/cart/items/:id (DeleteItemReq)

	@handler GetCart
	get /api/cart returns (CartInfo)

	@handler SelectCartItems
	put /api/cart/items/select (BatchOperateReq)

	@handler UnselectCartItems
	put /api/cart/items/unselect (BatchOperateReq)

	@handler GetSelectedItems
	get /api/cart/selected returns (SelectedItemsResp)
}

@server (
	jwt:        Auth
	group:      order
	middleware: Auth
)
service mall-api {
	@handler CreateOrder
	post /api/orders (CreateOrderReq) returns (Order)

	@handler GetOrder
	get /api/orders/:id returns (Order)

	@handler ListOrders
	get /api/orders (OrderListReq) returns (OrderListResp)

	@handler CancelOrder
	post /api/orders/:id/cancel

	@handler ConfirmReceived
	post /api/orders/:id/confirm

	@handler CreateRefund
	post /api/orders/:id/refund (CreateRefundReq) returns (RefundInfo)
}

@server (
	jwt:        Auth
	group:      payment
	middleware: Auth
)
service mall-api {
	@handler CreatePayment
	post /api/payments (CreatePaymentReq) returns (CreatePaymentResp)

	@handler GetPaymentStatus
	get /api/payments/:paymentNo/status (PaymentStatusReq) returns (PaymentStatusResp)

	@handler GetRefundStatus
	get /api/refunds/:refundNo/status (RefundStatusReq) returns (RefundStatusResp)
}

@server (
	group: payment
)
service mall-api {
	@handler PaymentNotify
	post /api/payments/notify (PaymentNotifyReq) returns (PaymentNotifyResp)

	@handler RefundNotify
	post /api/refunds/notify (RefundNotifyReq) returns (RefundNotifyResp)
}

