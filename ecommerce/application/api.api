syntax = "v1"

import "apis/user.api"
import "apis/product.api"
import "apis/cart.api"
import "apis/order.api"
import "apis/payment.api"

@server (
	group: auth
)
service mall-api {
	@handler Register
	post /api/auth/register (RegisterReq) returns (TokenResp)

	@handler Login
	post /api/auth/login (LoginReq) returns (TokenResp)
}

@server (
	jwt:   Auth
	group: user
)
service mall-api {
	@handler GetProfile
	get /api/user/profile returns (UserInfo)

	@handler UpdateProfile
	put /api/user/profile (UpdateProfileReq)

	@handler AddAddress
	post /api/user/addresses (AddressReq) returns (Address)

	@handler UpdateAddress
	put /api/user/addresses/:id (AddressReq)

	@handler DeleteAddress
	delete /api/user/addresses/:id

	@handler ListAddresses
	get /api/user/addresses returns ([]Address)

	@handler GetWallet
	get /api/user/wallet returns (WalletDetail)

	@handler GetWalletLogs
	get /api/user/wallet/logs (WalletLogReq) returns ([]WalletLog)
}

@server (
	group: product
)
service mall-api {
	@handler SearchProducts
	get /api/products (SearchReq) returns (SearchResp)

	@handler GetProduct
	get /api/products/:id returns (Product)

	@handler GetProductSkus
	get /api/products/:id/skus returns ([]Sku)

	@handler ListCategories
	get /api/categories returns ([]Category)

	@handler GetProductReviews
	get /api/products/:id/reviews (ReviewListReq) returns ([]Review)
}

@server (
	jwt:   Auth
	group: cart
)
service mall-api {
	@handler AddCartItem
	post /api/cart/items (CartItemReq)

	@handler UpdateCartItem
	put /api/cart/items/:id (CartItemReq)

	@handler DeleteCartItem
	delete /api/cart/items/:id

	@handler GetCart
	get /api/cart returns (CartInfo)

	@handler SelectCartItems
	put /api/cart/items/select (BatchOperateReq)

	@handler UnselectCartItems
	put /api/cart/items/unselect (BatchOperateReq)

	@handler GetSelectedItems
	get /api/cart/selected returns (SelectedItemsResp)
}

@server (
	jwt:   Auth
	group: order
)
service mall-api {
	@handler CreateOrder
	post /api/orders (CreateOrderReq) returns (Order)

	@handler GetOrder
	get /api/orders/:id returns (Order)

	@handler ListOrders
	get /api/orders (OrderListReq) returns (OrderListResp)

	@handler CancelOrder
	post /api/orders/:id/cancel

	@handler ConfirmReceived
	post /api/orders/:id/confirm

	@handler CreateRefund
	post /api/orders/:id/refund (CreateRefundReq) returns (RefundInfo)
}

@server (
	jwt:   Auth
	group: payment
)
service mall-api {
	@handler CreatePayment
	post /api/payments (CreatePaymentReq) returns (CreatePaymentResp)

	@handler GetPaymentStatus
	get /api/payments/:paymentNo/status returns (PaymentStatusResp)

	@handler GetRefundStatus
	get /api/refunds/:refundNo/status returns (RefundStatusResp)
}

@server (
	group: payment
)
service mall-api {
	@handler PaymentNotify
	post /api/payments/notify (PaymentNotifyReq) returns (PaymentNotifyResp)

	@handler RefundNotify
	post /api/refunds/notify (RefundNotifyReq) returns (RefundNotifyResp)
}

